<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Box</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css"
        integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
</head>
<style>
    body {
        background-image: url("https://wallpaperaccess.com/full/307543.jpg");
        background-repeat: no-repeat;
        background-size: cover;
    }

    .sidenav {
        height: 95vh;
        width: 18%;
        margin-left: 5%;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        background-color: rgb(39, 37, 37);
        overflow-x: hidden;
        padding: 1%;
    }

    .ml {
        margin-left: 20%;
    }

    /* .bg {
        background-color: #f8ceec;
        background-image: linear-gradient(315deg, #f8ceec 0%, #a88beb 74%);
    } */

    .h {
        height: 100%;
    }

    .mt {
        margin-top: 20%;
    }

    .btn {
        cursor: pointer;
        /* padding: 5px 15px; */
        background-color: #f8ceec;
        background-image: linear-gradient(315deg, #f8ceec 0%, #a88beb 74%);
        border: 0;
        font-size: 17px;
    }

    .btn:hover {
        background-color: #fce043;
        background-image: linear-gradient(315deg, #fce043 0%, #fb7ba2 74%);
    }

    .h {
        height: 10%;
    }

    .message-box {
        height: 80vh;
        overflow-y: scroll;
        position: relative;
    }

    .inputMessage {
        width: 800px;
    }

    #typing {
        color: #fb7ba2;
        position: fixed;
        top: 88%;
        z-index: 2;
        left: 25%;
    }

    .chat-message {
        font-family: cursive;
        background-color: rgba(81, 41, 97, 0.315);
    }

    .text-sky {
        color: #0aeff7;
    }

    li {
        list-style: none;
    }

    .disconText {
        color: #b4064f;
        font-size: 20px;
        font-weight: bold;
    }

    .activeList {
        color: #e70aa5;
        font-size: 20px;
        margin-right: 6%;
    }
</style>

<body>

    <div class="container">
        <div class="row">

            <div class="col-sm-10 ml bg  float-right mt-3">
                <nav class="navbar navbar-light bg-dark text-white">
                    <span class="pb-1 text-sky" id="usernameHome" name="<%= username %>">
                        <i class="far fa-user-circle fa-2x p-2"></i>
                        <%= username %>
                    </span>
                    <h2 class="font-weight-bold text-white text-center"><i class="fas fa-smile"></i>Chat Box</h2>
                    <a href="#" class="btn" id="discon">Disconnect</a>
                </nav>

                <div class="chat-message message-box" id="messages">
                    <p id="typing"></p>
                    <div class="sidenav mt-3 ">
                        <div class="text-center">
                            <h4 class="text-white"><i class="fas fa-users"></i> Users</h4>
                            <hr class="bg-white">
                            <ul id="activeList"></ul>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <form action="index.ejs" class="message-form">
                        <div class="row">
                            <div class="col-md-10">
                                <input type="text" class="form-control w-100 inputText" id="msg">
                            </div>
                            <div class="col-md-2">
                                <button class="btn w-100" id="send"><i
                                        class="fas fa-paper-plane"></i>&nbsp;Send</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>

        $(document).ready(function () {

            var socket = io();
            socket.on('checkactiveUser', (activeUsers) => {
                // console.log(activeUsers)
                $(activeList).empty()
                for (let user of activeUsers) {
                    $('#activeList').append(`<li class="activeList"><i class="fas fa-user-circle"></i>&nbsp;${user.username}</li>`)
                }
            })

            if ($("#usernameHome").attr("name")) {
                console.log(socket.id)
                let user = $("#usernameHome").attr("name");

                socket.emit('join', user);
                displayJoinedChat("you");

                socket.on('join', (msg) => {
                    //append the user joined  
                    displayJoinedChat(msg);
                })

                //detect when the a user is typing
                $("body").on('input', "#msg", () => {
                    user = $("#usernameHome").attr("name");
                    socket.emit('typing', user);
                })

                //send the message 
                $("#send").click((e) => {
                    let user = $("#usernameHome").attr("name");
                    e.preventDefault();
                    let message = $("#msg").val();
                    socket.emit('message', { username: user, message: message,date:getDate(new Date),time:formatAMPM(new Date) });
                    appendMessage(`${message}`, { direction: "right", color: "primary" },getDate(new Date),formatAMPM(new Date));
                    $("#msg").val("");
                });

                //recieve the emited message form the other users
                socket.on('message', (msg) => {
                    console.log(msg)
                    appendMessage(`${msg.username} : ${msg.message}`, { direction: "left", color: "success" },msg.date,msg.time);
                    clearTyping();
                })

                //on typing 
                socket.on('typing', (msg) => {
                    showTyping(msg);
                })

                //disconnect
                socket.on('disconnection', (msg) => {
                    disConnect(msg);

                })
            }

            $("#discon").click(async (e) => {
                e.preventDefault();
                let user = $("#usernameHome").attr("name");
                await socket.emit('disconnection', user);
                let counter = 0;
                const test = setInterval(() => {
                    if (counter > 0) {
                        window.location.href = '/';
                        clearInterval(test);
                    }
                    counter++;

                }, 1000)
            });


        });


        /**
 * Display 
 * @param {*} username 
 */

        function displayJoinedChat(username) {
            $("#messages").append(
                `<p class="text-center text-warning"><medium >${username} joined the chat</medium></p>`
            );
        }

        /**
         * Show if a user is typing
         * @param {*} username 
         */
        function showTyping(username) {
            $("#typing").text(`${username} is typing`);
        }

        function clearTyping() {
            $("#typing").text("");
        }

        /**
         * Append the message
         * @param {*} message 
         * @param {*} socket 
         */
        function appendMessage(message, data,date,time) { 
            $("#messages").append(
                `<div class="mt-2 mx-1"><p class="text-${data.direction}"><span class="p-2 bg-${data.color}">${message}</span><br><span style = "font-size:10px;color:white">${date} ${time}<span></p></div>`
            )
        }



        /**
         * Disconnect
         */
        function disConnect(username) {
            $("#messages").append(
                `<p class="text-center disconText"><small >${username} has disconnected</small></p>`
            );
        }

        /*
        * Time format
        */

        function formatAMPM(time) {
            var hours = time.getHours();
            var minutes = time.getMinutes();
            var ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var strTime = hours + ':' + minutes + ' ' + ampm;
            return strTime;
        }

        function getDate(date){
            var year = date.getFullYear()
            var month = date.getMonth()
            var date = date.getDate()
            return year+"-"+month+"-"+date
        }

        /*
        *Date format
        */

        

    </script>
    <script src="/static/js/main.js"></script>
</body>

</html>